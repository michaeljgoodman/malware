
use walkdir::WalkDir;
use whoami;
use std::fs;


fn main() {
    let current_user = whoami::username();
    let mut root_dir = "C:\\users\\".to_string();
    root_dir.push_str(&current_user);

    let extensions = vec!["doc", ".docx", ".ppt", ".pptx", ".xls", "xlsx", ".ost", ".pst"];

    for entry in WalkDir::new(root_dir)
            .follow_links(true)
            .into_iter()
            .filter_map(|e| e.ok()) {

        let f_name = entry.file_name().to_string_lossy();

        let _sec = entry.metadata().unwrap().modified().expect("couldn't get metadata");

        /* if f_name.ends_with(".docx") || f_name.ends_with(".pst") || f_name.ends_with(".ost") {
            println!("{}", entry.path().to_string_lossy());
        } */

        for ext in &extensions {
            if f_name.ends_with(ext) {
                println!("{}", entry.path().to_string_lossy());
                let contents = match  fs::read(entry.path()) {
                    Err(e) => {
                        println!("Something went wrong reading file {} : {}", entry.path().to_string_lossy(), e);
                        continue;
                    },
                    Ok(data) => data,

                };
                    
            }
        }

    }

/*     for entry in WalkDir::new("\\\\172.16.100.94\\cf-ws-08-share")
            .follow_links(true)
            .into_iter()
            .filter_map(|e| e.ok()) {

        let f_name = entry.file_name().to_string_lossy();

        let _sec = entry.metadata().unwrap().modified().expect("couldn't get metadata");

        if f_name.ends_with(".docx") {
            println!("{}", entry.path().to_string_lossy());
        }

    } */
}
